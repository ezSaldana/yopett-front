[{"/home/joel/Proyectos/yopett-front/src/index.jsx":"1","/home/joel/Proyectos/yopett-front/src/App.jsx":"2","/home/joel/Proyectos/yopett-front/src/globalStyles.js":"3","/home/joel/Proyectos/yopett-front/src/modules/common/MenuAppBar/index.jsx":"4","/home/joel/Proyectos/yopett-front/src/modules/services/lodging/RangeDatePicker/index.jsx":"5","/home/joel/Proyectos/yopett-front/src/modules/services/lodging/FirstStepHospedaje/index.jsx":"6","/home/joel/Proyectos/yopett-front/src/modules/services/lodging/FirstStepHospedaje/styles.js":"7","/home/joel/Proyectos/yopett-front/src/assets/icons/Calendar.jsx":"8","/home/joel/Proyectos/yopett-front/src/assets/icons/Reduce.jsx":"9","/home/joel/Proyectos/yopett-front/src/assets/icons/Add.jsx":"10","/home/joel/Proyectos/yopett-front/src/assets/icons/ToolTip.jsx":"11"},{"size":168,"mtime":1634826930063,"results":"12","hashOfConfig":"13"},{"size":589,"mtime":1636689023595,"results":"14","hashOfConfig":"13"},{"size":633,"mtime":1636681587452,"results":"15","hashOfConfig":"13"},{"size":772,"mtime":1635278098362,"results":"16","hashOfConfig":"13"},{"size":5911,"mtime":1636689032387,"results":"17","hashOfConfig":"13"},{"size":7547,"mtime":1642723191299,"results":"18","hashOfConfig":"13"},{"size":4826,"mtime":1642722783422,"results":"19","hashOfConfig":"13"},{"size":642,"mtime":1640150263025,"results":"20","hashOfConfig":"13"},{"size":476,"mtime":1640150819944,"results":"21","hashOfConfig":"13"},{"size":451,"mtime":1640150159270,"results":"22","hashOfConfig":"13"},{"size":589,"mtime":1640151429381,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"norwtp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/joel/Proyectos/yopett-front/src/index.jsx",[],["49","50"],"/home/joel/Proyectos/yopett-front/src/App.jsx",["51","52","53"],"import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { theme } from './globalStyles';\nimport './App.css';\nimport moment from 'moment';\nimport MenuAppBar from './modules/common/MenuAppBar';\nimport RangeDatePicker from './modules/services/lodging/RangeDatePicker';\nimport FirstStepHospedaje from 'modules/services/lodging/FirstStepHospedaje';\n\nconst App = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      {/* <MenuAppBar /> */}\n      {/* <RangeDatePicker /> */}\n      <FirstStepHospedaje />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","/home/joel/Proyectos/yopett-front/src/globalStyles.js",[],"/home/joel/Proyectos/yopett-front/src/modules/common/MenuAppBar/index.jsx",[],"/home/joel/Proyectos/yopett-front/src/modules/services/lodging/RangeDatePicker/index.jsx",["54","55","56","57"],"import React, { useState, useEffect, memo } from 'react';\nimport clsx from 'clsx';\nimport { Grid, Button, IconButton, Typography, makeStyles } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nimport moment from 'moment';\nimport 'moment/locale/es-mx';\n\nconst useStyles = makeStyles(() => ({\n  \n}));\n\nconst RangeDatePicker = () => {\n  const [actualDate, setActualDate] = useState(moment().format('YYYY-MM-DD'));\n  const [focusedDate, setFocusedDate] = useState(moment().format('YYYY-MM-DD'));\n  const [focusedDate2, setFocusedDate2] = useState(moment().add(7, 'days').format('YYYY-MM-DD'));\n  const [selectedDates, setSelectedDates] = useState({\n    start: focusedDate,\n    end: focusedDate2\n  });\n  const [displayDate, setDisplayDate] = useState(moment().format('YYYY-MM-DD'));\n  const [buttons, setButtons] = useState([]);\n\n  const classes = useStyles();\n  \n  useEffect(() => {\n    const startWeekDay = parseInt(moment(displayDate).startOf('month').format('e'));\n    const actualMonthDays = parseInt(moment(displayDate).endOf('month').format('D'));\n    const pastMonthEnd = parseInt(moment(displayDate).subtract(1, 'months').endOf('month').format('D'));\n    const pastMonthStart = startWeekDay === 0 ? 0 : pastMonthEnd\n      - startWeekDay + 1;\n    if (pastMonthStart !== 0) {\n      for (let i = pastMonthStart; i <= pastMonthEnd; i++) {\n        setButtons(prevButtons => [ ...prevButtons, {\n          key: moment(moment(displayDate).subtract(1, 'months').format(`YYYY-MM-${i}`)).format  ('YYYY-MM-DD'),\n          type: 'past',\n          day: i\n        }]);\n      }\n    }\n    for (let i = 1; i <= actualMonthDays; i++) {\n      setButtons(prevButtons => [ ...prevButtons, {\n        key: moment(moment(displayDate).format(`YYYY-MM-${i}`)).format('YYYY-MM-DD'),\n        type: 'actual',\n        day: i\n      }]);\n    }\n  }, [setButtons, displayDate]);\n\n  useEffect(() => {\n    if (buttons.length < 42 && buttons.length > 0) {\n      for(let i = 1; i <= 42 - buttons.length; i++) {\n        setButtons(prevButtons => [ ...prevButtons, {\n          key: moment(moment(displayDate).add(1, 'months').format(`YYYY-MM-${i}`)).format('YYYY-MM-DD'),\n          type: 'next',\n          day: i\n        }]);\n      }\n    }\n  }, [buttons, setButtons, displayDate]);\n\n  useEffect(() => {\n    if (moment(selectedDates.start) > moment(selectedDates.end)) {\n      setSelectedDates({\n        start: selectedDates.end,\n        end: selectedDates.start\n      });\n    }\n  }, [selectedDates, setSelectedDates]);\n\n  const handleDisplayDate = (type) => () => {\n    setButtons([]);\n    switch (type) {\n      case 'next':\n        setButtons([]);\n        setDisplayDate(moment(displayDate).add(1, 'months').format('YYYY-MM-DD'));\n        break;\n      case 'past':\n        setDisplayDate(moment(displayDate).subtract(1, 'months').format('YYYY-MM-DD'));\n        break;\n      default:\n        console.warn('Unhandled type', type);\n        return;\n    }\n  };\n\n  const handleMouseEnter = date => () => selectedDates.start && setFocusedDate(date);\n\n  const onRangeChange = (date, type) => () => {\n    const { start, end } = selectedDates;\n    if (start && end) {\n      setSelectedDates({\n        start: date,\n        end: null\n      });\n    } else if (start && !end) {\n      setSelectedDates(prevDates => ({ ...prevDates, end: date }));\n    }\n    type !== 'actual' && handleDisplayDate(type)();\n  };\n\n  return (\n    <Grid container direction='column' style={{minWidth: 320, width: 320, padding: 10, border: '1px solid #333'}}>\n      <Grid container item>\n        <IconButton onClick={handleDisplayDate('past')}>\n          <ArrowBackIos />\n        </IconButton>\n        <Typography style={{flexGrow: 1}} align='center' variant=\"h5\">\n          {moment(displayDate).format('MMMM YYYY')}\n        </Typography>\n        <IconButton onClick={handleDisplayDate('next')}>\n          <ArrowForwardIos />\n        </IconButton>\n      </Grid>\n      <Grid container item justify='space-around' style={{width: '100%', margin: 0, padding: 0}}>\n        {\n          Array.from(Array(7).keys()).map(day => (\n            <Typography key={day} variant='subtitle1' align='center' style={{width: '14%'}}>\n              {moment().isoWeekday(day).format('dd')}\n            </Typography>\n          ))\n        }\n      </Grid>\n      <Grid container item justify='center' style={{width: '100%', margin: 0, padding: 0}}>\n        {\n          buttons.map((item, i) => (\n            <Button\n              key={item.key}\n              variant={item.type === 'actual' ? 'contained' : null}\n              style={{\n                width: '14%',\n                minWidth: '14%',\n                borderRadius: 0,\n                margin: 0,\n                borderTop: '1px solid #333',\n                borderLeft: '1px solid #333',\n                borderBottom: i >= 35 ? '1px solid #333' : null,\n                borderRight: i === 41 || ((i+1) % 7) === 0  ? '1px solid #333' : null,\n                backgroundColor: item.key === selectedDates.start ||\n                  item.key === selectedDates.end ||\n                  (item.key === focusedDate && !selectedDates.end) ? '#3f51b5' :\n                    (item.key > selectedDates.start && item.key < selectedDates.end) ||\n                      (item.key > selectedDates.start && item.key < focusedDate\n                        && !selectedDates.end\n                      ) ||\n                      (item.key < selectedDates.start && item.key > focusedDate\n                        && !selectedDates.end\n                      ) ? '#7482cf' : null\n              }}\n              disabled={moment(item.key) < moment(actualDate)}\n              onMouseEnter={handleMouseEnter(item.key)}\n              onClick={onRangeChange(item.key, item.type)}\n            >\n              {item.day}\n            </Button>\n          ))\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(RangeDatePicker);\n","/home/joel/Proyectos/yopett-front/src/modules/services/lodging/FirstStepHospedaje/index.jsx",[],"/home/joel/Proyectos/yopett-front/src/modules/services/lodging/FirstStepHospedaje/styles.js",[],"/home/joel/Proyectos/yopett-front/src/assets/icons/Calendar.jsx",[],"/home/joel/Proyectos/yopett-front/src/assets/icons/Reduce.jsx",[],"/home/joel/Proyectos/yopett-front/src/assets/icons/Add.jsx",[],"/home/joel/Proyectos/yopett-front/src/assets/icons/ToolTip.jsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":14},{"ruleId":"62","severity":1,"message":"66","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":18},{"ruleId":"62","severity":1,"message":"67","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":23},{"ruleId":"62","severity":1,"message":"68","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"62","severity":1,"message":"69","line":13,"column":22,"nodeType":"64","messageId":"65","endLine":13,"endColumn":35},{"ruleId":"62","severity":1,"message":"70","line":15,"column":24,"nodeType":"64","messageId":"65","endLine":15,"endColumn":39},{"ruleId":"62","severity":1,"message":"71","line":23,"column":9,"nodeType":"64","messageId":"65","endLine":23,"endColumn":16},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'MenuAppBar' is defined but never used.","'RangeDatePicker' is defined but never used.","'clsx' is defined but never used.","'setActualDate' is assigned a value but never used.","'setFocusedDate2' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]